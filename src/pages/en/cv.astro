---
import BaseLayout from "@/layouts/BaseLayout.astro";
import TimeLineElement from "@/components/cv/TimeLine.astro";

const startDate = new Date("2021-07-01");
const today = new Date();

const monthsDifference =
  (today.getFullYear() - startDate.getFullYear()) * 12 +
  (today.getMonth() - startDate.getMonth());

const experienceYear = Math.floor(monthsDifference / 12);
const experienceMonth = Math.floor(monthsDifference % 12);
---

<BaseLayout title="Resume" sideBarActiveItemID="cv">
  <div class="mb-5">
    <div class="text-3xl w-full font-bold">Profile</div>
  </div>
  <div class="mb-10 text-justify">
    <i>Hello there❓</i>
    <!-- <br />I’m Honggwan Jeong<span class="text-sm text-gray-500"
      >(Khanne is short version of my Korean name lol)</span
    >, a frontend developer who focuses on developing efficient and
    typesafe products and strives to provide a good UX for users.
    <br />I believe that good developer experience (DX) leads to good
    user experience (UX), and I’m always looking for ways to improve
    both. <br />
    I have {experienceYear} years {
      experienceMonth ? `and ${experienceMonth} months` : ""
    } of experience in front-end development, Mainly concentrated on React,
    NextJS.<br />
    I’m excited to work with people who share my passion for delivering
    better UX and creating innovative web experiences. -->
    <p class="mb-1">
      I am a web frontend developer, Hong-gwan Jeong, who focuses on
      developing products that are efficient, typesafe, and provide
      good UX to users.
    </p>
    <h3 class="text-lg font-semibold">TypeScript</h3>
    <p class="mb-2">
      I believe that <i>“perfect types exist.”</i> I have experience automating
      type checks during deployment, push processes, and adding TypeScript-related
      settings to lint, and I strive to create products without any types.
      I think TypeScript is similar in nature to accessibility. Just because
      a product receives a high score in the accessibility category of
      Lighthouse, does not mean it is an accessible product. Similarly,
      I don’t think that code that doesn’t throw errors in the TypeScript
      engine is typesafe. I like to use keywords such as as const and function
      overloading to specify stronger types and write code while thinking
      about them.
    </p>
    <h3 class="text-lg font-semibold">DX(Developer Experience)</h3>
    <p class="mb-2">
      I think that the ultimate product of improving development
      experience (DX) is the quality of the results. I think it’s
      important to improve the development experience using monorepos,
      automated CICD, linters, etc.
    </p>
    <p class="mb-2">
      I prefer to use monorepos to efficiently utilize development
      resources by reducing management points for repetitive codes
      such as common components and project-specific common settings,
      and to reduce meaningless resource waste in builds using various
      caching methods.
    </p>
    <h3 class="text-lg font-semibold">TDD</h3>
    <p class="mb-2">
      "Many features in product can be error-prone, but many features
      do not necessarily mean many errors."I strive to provide users
      with a product that works normally without errors by automating
      various tests (unit, component, e2e) in CI process.
    </p>
    <h3 class="text-lg font-semibold">Learning new skills</h3>
    <p class="mb-2">
      I prefer to learn new technologies mainly in a bottom-up manner.
      I tried to learn new technologies in a top-down manner, but I
      often found myself studying in a bottom-up manner. I always
      think that the basics are important, so I often read the React
      official documentation or the MDN official documentation.
    </p>
    <br />
    <p class="mb-1">
      I enjoy healthy discussions about technology and like to write
      technical articles or articles about my attitude towards
      development on my development blog.
    </p>
  </div>

  <div class="mb-5">
    <div class="text-3xl w-full font-bold">Education</div>
  </div>

  <div class="time-line-container grid gap-4 mb-10">
    <TimeLineElement
      title="Korea IT Occupational Training College (Bachelor's degree)"
      subtitle="2017 to 2020, Seoul, Korea - Department of Computer and Information Security"
    />
  </div>

  <div class="mb-5">
    <div class="text-3xl w-full font-bold">Experience</div>
  </div>

  <div class="time-line-container mb-10">
    <TimeLineElement
      title="Rapid Global - Frontend Engineer(Lead)"
      subtitle="From May 2023 to Dec 2023, Seoul, Korea"
    >
      <ul class="list-disc ml-4">
        <li>
          Launched "Hey Seller" as a 100% web-based open market
          sourcing automation service, replacing the existing "Rapid
          Up" service based on C#, Electron.
        </li>
        <li>
          Built an image editor using HTML canvas (fabricjs)
          (translate text in images, erase text in images)
        </li>
        <li>
          Tracked product registration progress for each shopping mall
          between page routing using web sockets (Socket IO)
        </li>
        <li>
          Use Chrome DevTools to debug and troubleshoot memory leaks
          to resolve slowdowns after using certain features for a
          period of time.
        </li>
        <li>
          Automated various tests by applying unit, component, and e2e
          tests to CI
        </li>
      </ul>
    </TimeLineElement>
    <TimeLineElement
      title="DeepleHR - Frontend Engineer"
      subtitle="From Apr 2022 to Apr 2023, Seoul, Korea"
    >
      <ul class="list-disc ml-4">
        <li>
          Migrated existing products implemented in EJS to React,
          NextJS, and TypeScript
        </li>
        <li>
          Implemented ISR to minimize backend requests to server and
          improve TTV, LCP
        </li>
        <li>
          Improved DX(Developer Experience) by implementing a
          monolithic architecture to efficiently manage the code base
          and using remote caching to minimize time spent on builds,
          tests, and linting
        </li>
        <li>
          Developed and documentized common components using storybook
          to maximize component maintainability and collaboration with
          designers.
        </li>
      </ul>
    </TimeLineElement>
    <TimeLineElement
      title="Cyberone - Penetration Tester and Frontend Engineer"
      subtitle="From 2020 to 2022, Seoul, Korea"
    >
      <ul class="list-disc ml-4">
        <li>
          Reverse engineering analysis of mobile, desktop, and web
          applications to understand how applications work, and use
          programming knowledge to identify security vulnerabilities
          and propose countermeasures.
        </li>
        <li>
          Web and Mobile hacking - Find vunlerabilities and propose
          countermeasures for SQL Injection, XSS,
          authorization-related vulnerabilities, file download/upload
          vulnerabilities, bypass rooting detection logic using
          reverse engineering analysis, analyze obfuscated
          applications, and modify security logic.
        </li>
        <li>
          Black box penetration test - Black box-based penetration of
          national infrastructure and financial institutions.
        </li>
      </ul>
    </TimeLineElement>
  </div>

  <div class="mb-5">
    <div class="text-3xl w-full font-bold">Certifications</div>
  </div>

  <ul class="list-disc mx-6 mb-10 grid gap-2">
    <li>
      <a
        href="https://courses.edx.org/certificates/e2817567681c40538c42e8d45e6ada0f"
        target="_blank"
        class="underline"
      >
        WAI0.1x: Introduction to Web Accessibility
      </a>
    </li>
  </ul>

  <div class="mb-5">
    <div class="text-3xl w-full font-bold">Skills</div>
  </div>

  <ul class="list-disc md:columns-5 columns-2 mx-6">
    <li class="mb-3">
      <img
        src="https://img.shields.io/badge/javascript-F7DF1E?style=for-the-badge&logo=javascript&logoColor=black"
      />
    </li>
    <li class="mb-3">
      <img
        src="https://img.shields.io/badge/typescript-3178C6?style=for-the-badge&logo=typescript&logoColor=white"
      />
    </li>
    <li class="mb-3">
      <img
        src="https://img.shields.io/badge/react-61DAFB?style=for-the-badge&logo=react&logoColor=black"
      />
    </li>
    <li class="mb-3">
      <img
        src="https://img.shields.io/badge/next.js-000000?style=for-the-badge&logo=next.js&logoColor=white"
      />
    </li>
    <li class="mb-3">
      <img
        src="https://img.shields.io/badge/socketdotio-010101?style=for-the-badge&logo=socketdotio&logoColor=white"
      />
    </li>
    <li class="mb-3">
      <img
        src="https://img.shields.io/badge/playwright-2EAD33?style=for-the-badge&logo=playwright&logoColor=white"
      />
    </li>
    <li class="mb-3">
      <img
        src="https://img.shields.io/badge/cypress-69D3A7?style=for-the-badge&logo=cypress&logoColor=white"
      />
    </li>
    <li class="mb-3">
      <img
        src="https://img.shields.io/badge/jest-C21325?style=for-the-badge&logo=jest&logoColor=white"
      />
    </li>
    <li class="mb-3">
      <img
        src="https://img.shields.io/badge/githubactions-2088FF?style=for-the-badge&logo=githubactions&logoColor=white"
      />
    </li>
  </ul>
</BaseLayout>
